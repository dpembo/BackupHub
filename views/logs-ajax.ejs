<!DOCTYPE html>
<html lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1.0"/>
 

  

  <title>BackupHub | Logs</title>

  <%- include('./partials/_head'); %>
  <%- include('./partials/_scripts'); %>
  
  <script>
  var sort="lastrun";
  var order="-1";
  var refresh="0";
  var refreshEnabled=false;
  var interval;

  function doNotify(status,msg)
  {
      $.pnotify({
      title: 'Backup Job',
      text: msg,
      type: status,
      history: false,
      styling: 'jqueryui'
      });
  }

  function generateDialogs()
  {
  //Generate the dialogs 
<% for(i = 0; i < config.length; i++) {%>

    $(function() {
       $( "#dialog<%=i%>" ).dialog({
          autoOpen: false,
          height: 600,
          width: 1000     
       });
       $( "#opener<%=i%>" ).click(function() {
          $( "#dialog<%=i%>" ).dialog( "open" );
       });
    });  
<%}%>
  }

    function getUrlParam(name){
      if(name=(new RegExp('[?&]'+encodeURIComponent(name)+'=([^&]*)')).exec(location.search))
        return decodeURIComponent(name[1]);
    }

    function doSort(id)
    {
      //var currSort = set_sort;
      //var order = set_order;

      if(order===undefined)order="1";
      if(sort===undefined)sort="id";

      //alert("sorting for [" + id + "]");
      //alert("Current sort: " + sort);
      //alert("order: " +order);

      if(sort==id)
      {
        //leave as the same, but toggle direction
        if(order=="1")order="-1";
        else(order="1");
      }
      else
      {
        order="1";
      }
      sort=id;
      //document.location.href="logs.html?sort=" + id + "&order=" + order;
      fetchLogs(refresh,id,order);
    }


    function abortJobCall(joblog,jobName,eta){
      alert("Not implemented yet");
      return;
      
      var len = joblog.length;
      len = len -4;
      newjoblog = joblog.substr(0,len);

      //var xhttp1 = new XMLHttpRequest();
      //xhttp1.open("GET", "/rest/eta?eta=" + eta , false);
      //xhttp1.send(null);

      var xhttp = new XMLHttpRequest();
      xhttp.open("GET", "http://192.168.1.24:1880/backup-abort?dest=" + newjoblog, false);
      xhttp.send(null);

      if (xhttp.status === 200) {
        var obj = JSON.parse(xhttp.responseText);
        if(obj.status=="Job Started")
        {
          doNotify("success","Job [" + jobName + "] Successfully Queued - Please wait for this to start" );
        }
        else
        {
          doNotify("error","Job [" + jobName + "] Not Queued - another job [" + obj.job + "] is already queued" );
        }
      }
    };

    function invokeJobCall(joblog,jobName,eta) {
      var len = joblog.length;
      len = len -4;
      newjoblog = joblog.substr(0,len);

      //var xhttp1 = new XMLHttpRequest();
      //xhttp1.open("GET", "/rest/eta?eta=" + eta , false);
      //xhttp1.send(null);

      var xhttp = new XMLHttpRequest();
      xhttp.open("GET", "http://192.168.1.24:1880/backup-init?dest=" + newjoblog, false);
      xhttp.send(null);

      if (xhttp.status === 200) {
        var obj = JSON.parse(xhttp.responseText);
        if(obj.status=="Job Started")
        {
          doNotify("success","Job [" + jobName + "] Successfully Queued - Please wait for this to start" );
        }
        else
        {
          doNotify("error","Job [" + jobName + "] Not Queued - another job [" + obj.job + "] is already queued" );
        }
      }
    };
    function dorefresh()
    {
      refreshEnabled = document.getElementById("refreshtoggle").checked

      //if(refreshEnabled)document.getElementById("refreshbutton").className="btn-small green waves-effect waves-light";
      //else document.getElementById("refreshbutton").className="btn-small orange waves-effect waves-light";
      refresh = document.getElementById("refreshval").value;
      if(refreshEnabled)interval = setInterval(actionRefresh,refresh*1000);
      else clearInterval(interval);
    }

    function actionRefresh()
    {
      fetchLogs(refresh,sort,order);
    }
    
   
    function success() {
      var data = this.responseText;
      document.getElementById('logsview').innerHTML=data;
      generateDialogs();
      document.getElementById("loading").style.display="none";
    }

    function error(err) {
      alert("Error: " + err);
      document.getElementById("loading").style.display="none";
    }

    function fetchLogs(refresh,sort,order)
    {
      document.getElementById("loading").style.display="display";
      var xhr = new XMLHttpRequest();
      xhr.onload = success;
      xhr.onerror = error;
      xhr.open("GET", "/logs-inline.html?refresh=" + refresh + "&sort=" + sort + "&order=" + order);
      xhr.send();
    }
  
  </script>

  <style type="text/css">
    /* ------------------------*/  
    /* Set the size, colour, font properties for the blinking text */
        .blinking {
            animation: blinkingText 1s infinite;
            color: white;
        }
        
        /* Specifies the animation and transparency for the blinking text */
        @keyframes blinkingText {
   
            0% {
                opacity: 0;
            }
            50% {
                opacity: .5;
            }
            100% {
                opacity: 1;
            }
        }

        #buttons {
          border: 0px solid;
          width: 200px;
          padding-top: 5px;
          padding-left: 5px;
          background-color: #eeeeee;
          height: 80px;
          position: relative;
          top: -40px;
          /* left: 400px; */
          display: block;
          float: right;
          border-bottom: 1px solid #bbbbbb;
        }

        div#refreshLabel {
          color: #63ade9;
        }

        #loading {
          display: inline-block;
          position: relative;
          left: 0px;
          top: -75px;
          width: 25px;
          height: 25px;
          border: 3px solid rgba(255,255,255,0.3);
          border-radius: 50%;
          border-top-color: #63ade9;
          animation: spin 1s ease-in-out infinite;
          -webkit-animation: spin 1s ease-in-out infinite;
        }

        @keyframes spin {
          to { -webkit-transform: rotate(360deg); }
        }
        @-webkit-keyframes spin {
          to { -webkit-transform: rotate(360deg); }
        }

        .tableIconButton
        {
          color: #63ade9;
        }

        .tableIconButton:hover
        {
          color: #2049b9;
        }

        .tableIconButtonDisabled
        {
          color: #cccccc;
        }

        .vertMid
        {
          vertical-align: middle;
        }

        .refreshTime
        {
          display: block;
          float: left;
          position: relative;
          top: -20px;
          left: 5px;
        }

        
        #refreshSwitch {
            position: relative;
            left: 20px;
            top: 5px;
        }

        .logstable
        {
          position: relative;
          top: -50px;
        }

        #index-banner
        {
          z-index:999;
          background-color: #ffffff;
        }

	.ui-dialog{
	  z-index: 9999;
	  position: fixed;
	}


      
    </style>
</head>
<body onload="fetchLogs('0','id','1')">
  <header>
  <%- include('./partials/_header'); %>
  <div class="section no-pad-bot" id="index-banner">
    <div class="container">
      <h5 class="header orange-text">Monitor</h5>
        <div id="buttons">
           <!-- Switch -->
          <div id="refreshLabel">Refresh</div>
          <div class="input-field refreshTime"><input type="text" id="refreshval" value="<%if(refresh===undefined){%>3<%}else{%><%=refresh%><%}%>" style="width: 40px"/><span id="secslabel">seconds</span></div>
          <div class="switch" id="refreshSwitch">
            <label>
              <input type="checkbox" id="refreshtoggle" onclick="dorefresh()">
              <span class="lever"></span>
            </label>  
          </div>
          <span id="loading"></span>
          <!--<a href="/logs.html" title="Refresh" class="btn-small orange waves-effect waves-light"><span class="material-icons vertMid">refresh</span></a>-->
          <!--<a id="refreshbutton" href="#" onclick="dorefresh()" title="Refresh" class="btn-small orange waves-effect waves-light"><span class="material-icons vertMid">update</span></a>-->
        </div>
      
      
      
    </div>
  </div>      
  </header> 
  
  <main>
  <div id="logsview"></div>
  </main>

  <footer>
  <%- include('./partials/_footer'); %>
  </footer>


  </body>
</html>

